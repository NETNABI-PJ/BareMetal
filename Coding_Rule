# C Codding rule
- 기본 파일구성 -
Test_Type.h     //- 공통으로 참조해야할 Define, enum, structure,
Test.h          //- Test 파일안에서 사용될 Define, Function, enum, structure
Test.c          //- 소스코드

- 헤더파일 내부 구성 -  
/**************************************************************************************************
//  FileName : test_type.h
//  Author   : Netnabi
//  Date     : 2023.04.13 New!
//  Modify   : 2023.04.13 
//-------------------------------------------------------------------------------------------------
//  coding info
01. a = array variable         e.g. a_Data[]
02. b = bit fields             e.g. b_Data
03. c = const                  e.g, c_Data
04. d = define                 e.g. d_Data
05. e = enum Type              e.g. e_Data
06. f = Function               e.g. f_Data
07. g = source global          e.g. gv_Data, (project}
08. i = Inline                 e.g. i_Data
09. l = local variable         e.g. lv_Data (file Source)
10. m = enum member            e.g. m_Data
11. p = Pointer                e.g. p_Data
12. s = struct                 e.g. s_Data
13. t = typedef                e.g. t_Data
14. u = Union                  e.g. u_Data
15. v = variable               e.g. v_Data
**************************************************************************************************/
#ifndef _TEST_TYPE_H_
#define _TEST_TYPE_H_
#define d_DATA_SIZE  0 

Typedef eumm
{
  m_USER
}te_Sata;

Typedef struct
{
  uint32 v_Test;
}ts_Test;

#endif
--------------------------------------------------------------------------------------------------
- 소스파일 내부 구성 -
/**************************************************************************************************
//  FileName : test_type.h
//  Author   : Netnabi
//  Date     : 2023.04.13 New!
//  Modify   : 2023.04.13 
//-------------------------------------------------------------------------------------------------
//  coding info
01. a = array variable         e.g. a_Data[]
02. b = bit fields             e.g. b_Data
03. c = const                  e.g, c_Data
04. d = define                 e.g. d_Data
05. e = enum Type              e.g. e_Data
06. f = Function               e.g. f_Data
07. g = source global          e.g. gv_Data, ga_Data...
08. i = Inline                 e.g. i_Data
09. l = local variable         e.g. lv_Data
10. m = enum member            e.g. m_Data
11. p = Pointer                e.g. p_Data
12. s = struct                 e.g. s_Data
13. t = typedef                e.g. t_Data
14. u = Union                  e.g. u_Data
15. v = variable               e.g. v_Data
16. x = Extern                 e.g. xv_Data
**************************************************************************************************/
uint32 xv_Buff;      //- xv는 외부공유형 변수를 지칭, extern으로 정의 절대로 다른 소스코드에서 선언금지.
uint32 gv_Buff;      //- gv는 파일 글로벌 변수 
uint32 ga_Buff[10];  //- ga는 Array변수 표현
void Test(void)
{
  static uint32 lv_Buff;  //- lv는 함수내 비휘발성 변수로 static을 사용한 변수
  uint32 v_Buff;          //- 함수내 일반적인 휘발성 변수
}
